<< 0.  The installation of PREEMPT-RT on Raspberry PI involves ... 

 * collecting Raspberry Pi kernel sources and the PREEMPT_RT patch with version
   numbers and patch levels that match your desktop linux installation
 * patching the Raspberry PI linux kernel sources with the PREEMTP-RT patch
 * cross compiling the patched Raspberry PI Linux kernel source on a linux
   computer (e.g., a computer running ubuntu) 
 * transferring and installing the patched and compiled Raspberry PI linux
   kernel on the Raspbery PI

  For this to work the kernel version of the PREEMPT-RT patch, the Rapsberry PI
  linux kernel, and the kernel of the computer-based linux installation all
  need to match.

  Check the kernel version of your current RPi installation and your current
  Linux desktop installation

uname -a

  The versions used to build a new RT kernel today, 2023-08-25, are

  * xubuntu 22.04.3 on a Dell desktop: kernel version   5.15.0-78-generic x86-64

  * raspberry pi OS on RPi 4B     : kernel version   5.15.92-???
    https://github.com/raspberrypi/linux
    https://github.com/raspberrypi/linux/tree/rpi-5.15.y

  * PREEMPT_RT patch            : patch version    5.15.125-rt66 
    https://wiki.linuxfoundation.org/realtime/preempt_rt_versions 
    https://cdn.kernel.org/pub/linux/kernel/projects/rt/5.15/

>>
<< 1.  Install tools required for cross-compiling the kernel 

   https://www.raspberrypi.com/documentation/computers/linux_kernel.html
   https://wiki.linuxfoundation.org/realtime/documentation/howto/applications/preemptrt_setup

sudo apt install build-essential libgmp-dev libmpfr-dev libmpc-dev libisl-dev libncurses5-dev bc git-core bison flex
sudo apt install libncurses-dev libssl-dev binutils

   https://github.com/raspberrypi/tools ... read the README.md and get the build tools from ubuntu apt using ... 

sudo apt install gcc-arm-linux-gnueabihf
sudo apt install binutils-doc gcc-11-locales cpp-doc gcc-11-doc autoconf automake libtool gcc-doc 
sudo apt install crossbuild-essential-armhf


>>
<< 2.  Find and download the raspberry pi kernel and the preempt_rt patch matching your ubuntu kernel 

  ...  kernel version 5.15 on 2022-12-02

  from https://wiki.linuxfoundation.org/realtime/preempt_rt_versions 
  download  patches-5.15.79-rt54.xz

  from https://github.com/raspberrypi/linux
  wget https://github.com/raspberrypi/linux/archive/refs/heads/rpi-5.15.y.zip
  ... or ... Code > Download ZIP  ... 

##  not found ... 
##  https://raw.githubusercontent.com/fedberry/kernel/master/usb-dwc_otg-fix-system-lockup-when-interrupts-are-threaded.patch
##  ... not found

>>
<< 3.  Unzip the raspberry pi kernel sources and patch the kernel with the preempt_rt patch 
 
mkdir rpi-5.15-rt
cd rpi-5.15-rt
mv ~/Downloads/patch-5.15.79-rt54.patch.xz .
pwd # ~/Code/Data-Aq/RPi-DataAq/rpi-5.15-rt
unzip -u linux-rpi-5.15.y.zip
cd linux-rpi-5.15.y

head  Makefile  -n 4   #  confirm the VERSION, PATCHLEVEL, SUBLEVEL

   # SPDX-License-Identifier: GPL-2.0
   VERSION = 5
   PATCHLEVEL = 15
   SUBLEVEL = 80

xzcat ../patch-5.15.79-rt54.patch.xz | patch -p1

>>
<< 4.  Configure the patched kernel for RPi 4B

   https://www.raspberrypi.com/documentation/computers/linux_kernel.html#configuring-the-kernel
   https://lemariva.com/blog/2018/07/raspberry-pi-preempt-rt-patching-tutorial-for-kernel-4-14-y
   https://www.raspberrypi.com/documentation/computers/linux_kernel.html#cross-compiling-the-kernel
   https://robskelly.com/2020/10/14/raspberry-pi-4-with-64-bit-os-and-preempt_rt/

cd  ... / ... / rpi-5.15-rt/linux-rpi-5.15.y 

export KERNEL=kernel7l

export ARCH=arm

export CROSS_COMPILE=arm-linux-gnueabihf-

export INSTALL_MOD_PATH=$PWD/rpi-5.15-rt

export INSTALL_DTBS_PATH=$PWD/rpi-5.15-rt

# Apply the Default Configuration 

make bcm2711_defconfig

# Customize the kernel for PREEMPT_RT

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig

  navigate to ...

  General setup Preemtion Model --->
  select Fully Preemptible Kernel (Real-Time) 

  Kernel Features ---> Timer Frequency
  select 1000 Hz
  
  exit and save to .config 

  confirm that line 95 (or thereabouts) of .config is ...
    CONFIG_HIGH_RES_TIMERS=y
  confirm that line 115 (or thereabouts) of .config is ...
    CONFIG_PREEMPT_RT=y
  confirm that line 484-485 (or thereabouts) of .config is ...
    CONFIG_HZ_1000=y
    CONFIG_HZ=1000


>>
<< 5.  Build the patched kernel for RPi 4B 

   https://lemariva.com/blog/2019/09/raspberry-pi-4b-preempt-rt-kernel-419y-performance-test
   https://lemariva.com/blog/2018/07/raspberry-pi-preempt-rt-patching-tutorial-for-kernel-4-14-y
   https://www.raspberrypi.com/documentation/computers/linux_kernel.html#cross-compiling-the-kernel

cd  ... / ... / rpi-5.15-rt/linux-rpi-5.15.y 

make  clean

# double check .config again, as in the end of step 5 above

make -j4 zImage 
make -j4 modules 
make -j4 dtbs
make -j4 modules_install
make -j4 dtbs_install

   At the end of modules_install information note the
   last section of DEPMOD reports the version of your new RT kernel ...   
   5.15.80-rt54-v7l

   https://github.com/raspberrypi/linux/issues/3249
   https://www.raspberrypi.com/documentation/computers/linux_kernel.html
   https://github.com/iamroot12CD/linux/blob/master/scripts/mkknlimg

cd  ... / ... / rpi-5.15-rt/linux-rpi-5.15.y 

mkdir $INSTALL_MOD_PATH/boot
mkdir $INSTALL_MOD_PATH/boot/overlays
mkdir $INSTALL_MOD_PATH/lib


export KERNELrt=kernel7l_rt

cp arch/arm/boot/zImage $INSTALL_MOD_PATH/boot/$KERNELrt.img
cp arch/arm/boot/dts/*.dtb $INSTALL_MOD_PATH/boot/.
cp arch/arm/boot/dts/overlays/*.dtb* $INSTALL_MOD_PATH/boot/overlays/.
cp arch/arm/boot/dts/overlays/README $INSTALL_MOD_PATH/boot/overlays/.


>>
<< 6.  Update RPi OS on your RPi 4  (if needed) 

if needed, backup your user data from your Raspberry Pi filesystem 

Download the version of Raspberry Pi OS that matches your desktop installation
to SD card via the Raspberry Pi SD card imager app from ...   
https://www.raspberrypi.com/software/ 
  sudo apt install rpi-imager
Requires a new (?) SD card and a SD card reader. 
This is easier on a windows computer since many SD card readers are not supported in ubuntu

 https://www.raspberrypi.com/software/

start RaspberryPiImager
select RASPBERRY PI OS (32-bit)
config: enable SSH

Boot Raspberry Pi with new SD card and check the kernel version

uname -a

 ... Linux hpg-rpi01 5.15.76-v7l+ #1597 SMP Fri Nov 4 12:14:58 GMT 2022 armv7l GNU/Linux

>>
<< 7.  Tar and transfer the patched kernel to your Raspberry RPi 4B 

cd $INSTALL_MOD_PATH

  You should be in this directory ...

 ... / ... / rpi-5.15-rt/linux-rpi-5.15.y/rpi-5.15-rt 

cd .. 
tar cvzf rpi-5.15.68-rt49-v7l-kernel.tgz  rpi-5.15-rt/*

    On RPi ... 

scp lausanne.egr.duke.edu:/tmp/rpi-5.15.68-rt49-v7l-kernel.tgz  /tmp/. 


>>
<< 8.  Install the patched kernel image, modules, and device tree overlays to the RPi 4B

   ... on the Raspberry Pi terminal ...

cd /tmp
tar -xvf rpi-5.15.68-rt49-v7l-kernel.tgz
cd /tmp/rpi-5.15-rt/boot
sudo cp -rd * /boot/. 
cd /tmp/rpi-5.15-rt/lib 
sudo cp -rd * /lib/. 
cd /tmp/rpi-5.15-rt/boot/overlays 
sudo cp -d * /boot/overlays/. 
cd /tmp/rpi-5.15-rt/ 
sudo cp -d bcm* /boot/.  

sudo vi /boot/config.txt

  add these two lines to the top of /boot/config.txt ...

# kernel with PREEMPT_RT
kernel=kernel7l_rt.img


   reboot your RPi 4B


uname -a

   should return something like ... 
   Linux ... 5.15.80-rt54-v7l #1 SMP PREEMPT_RT  ... 
   ... for example ... 
   Linux hpg-rpi01 5.15.80-rt54-v7l #1 SMP Sat Dec 3 05:59:45 EST 2022 armv7l GNU/Linux


>>
<< 9.  RT-Tests suite

https://lemariva.com/blog/2019/09/raspberry-pi-4b-preempt-rt-kernel-419y-performance-test
https://taste.tuxfamily.org/wiki/index.php?title=Tricks_and_tools_for_PREEMPT-RT_kernel

sudo apt install rt-tests

sudo cyclictest  -p 90  -i 1000

sudo cyclictest -l50000000 -m -S -p90 -i200 -h400 -q > output.txt
grep -v -e "^#" -e "^$" output.txt | tr " " "," | tr "\t" "," >histogram.csv
sed -i '1s/^/time,core1,core2,core3,core4\n /' histogram.csv

>>
<< 10. Programming for realtime performace ...

https://stackoverflow.com/questions/35766811/build-an-rt-application-using-preempt-rt
https://rt.wiki.kernel.org/index.php/HOWTO:_Build_an_RT-application
https://elinux.org/images/8/82/How_linux_preempt_rt_works_111207_1100.pdf

>>

<< ================================================================================

https://lemariva.com/blog/2018/02/raspberry-pi-rt-preempt-tutorial-for-kernel-4-14-y


https://stackoverflow.com/questions/71645509/raspberry-pi4-kernel-64bit-with-rt-extension
https://github.com/feecat/rpi-rt
https://github.com/feecat/rpi-rt/releases
https://lemariva.com/blog/2019/09/raspberry-pi-4b-preempt-rt-kernel-419y-performance-test



1. Download the PREEMPT-RT-kernal 

    Download rt64-kernel_5.4.61_rt37.tgz from    https://forum.linuxcnc.org/9-installing-linuxcnc/39779-rpi4-raspbian-64-bit-linuxcnc?start=10#181585 

    https://github.com/feecat/rpi-rt/releases

>>

vim600: set foldmethod=marker foldmarker=<<,>> foldlevel=0 foldminlines=2 :

